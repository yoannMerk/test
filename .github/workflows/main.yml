# This is a basic workflow to help you get started with Actions

name: MON WF

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Get hash of last commit and current date
        run: |
          echo "SHA=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "DATE=$(TZ=America/Montreal date +'%Y%m%dT%H%M')" >> $GITHUB_ENV
          
      # Runs a set of commands using the runners shell
      - name: Create Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          git tag "Mon-app-$SHA-$DATE"
          git push --tags

     # Add steps to retrieve commit hashes of the last two tags starting with 'ma-deuxieme-app'
      - name: Get commit hashes of last two tags starting with 'ma-deuxieme-app'
        id: get_commit_hashes
        run: |
          git fetch --tags
          echo "TAGS=$(git tag --sort=-committerdate)" >> $GITHUB_ENV
          MA_DEUXIEME_APP_TAGS=$(echo "$TAGS" | grep '^Mon-app-' | head -n 2)
          FROM_TAG=$(echo "$MA_DEUXIEME_APP_TAGS" | sed -n 2p)
          TO_TAG=$(echo "$MA_DEUXIEME_APP_TAGS" | sed -n 1p)
          # Replace invalid characters in tag names with underscores
          FROM_TAG_CLEAN=$(echo "$FROM_TAG" | tr - _)
          TO_TAG_CLEAN=$(echo "$TO_TAG" | tr - _)
          echo "::set-env name=FROM_TAG_HASH::$(git rev-parse $FROM_TAG)"
          echo "::set-env name=TO_TAG_HASH::$(git rev-parse $TO_TAG)"
          echo "::set-env name=FROM_TAG_HASH_CLEAN::$(git rev-parse $FROM_TAG_CLEAN)"
          echo "::set-env name=TO_TAG_HASH_CLEAN::$(git rev-parse $TO_TAG_CLEAN)"

      - name: Get commits between tags
        id: get_commits_between_tags
        run: |
          git log --pretty=format:"%h %s" $FROM_TAG_HASH..$TO_TAG_HASH > commits.txt
