name: Notify
on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      tag-prefix:
        required: true
        type: string
      repo-url:
        required: true
        type: string

jobs:
  send_start_message:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get last tag
        run: |
          git fetch --tags
          FROM_TAG=$(echo "$(git tag --sort=-committerdate | grep '^${{ inputs.tag-prefix }}' | head -n 2)" | sed -n 1p)
          echo "FROM_TAG_HASH=$(git rev-parse "${FROM_TAG}")" >> $GITHUB_ENV
      - name: Generate Slack message
        id: slack_message
        run: |
          latest_commit=$(git rev-parse HEAD)
          SLACK_MESSAGE=''
          REPO_URL=${{ inputs.repo-url }}
          MAX_LENGTH=300
          for commit in $(git rev-list $FROM_TAG_HASH..${latest_commit})
          do
           short_hash=$(git log --format=%h -n 1 $commit)
           short_author=$(git log --format=%aE -n 1 $commit | grep -o '^[^@]*' | cut -d'@' -f1 )
           commit_message=$(git log --format=%s -n 1 $commit | sed "s/\"/'/g")
           new_entry="• <$REPO_URL/commit/${short_hash} | ${short_hash}> (${short_author}): ${commit_message}\n"
           if [ $((${#SLACK_MESSAGE} + ${#new_entry})) -gt $MAX_LENGTH ]; then
             SLACK_MESSAGE+="• Commit list has been truncated\n"
             break
           fi
           SLACK_MESSAGE+="$new_entry"
          done
          SLACK_MESSAGE+="• <${{ inputs.repo-url }}/compare/$FROM_TAG_HASH...${latest_commit}| See full diff>"
          echo "MESSAGE=$SLACK_MESSAGE" >> $GITHUB_OUTPUT


      - name: Notify in Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
                "text":"",
                "blocks":[
                 {
                    "type":"section",
                    "text":{
                      "type":"mrkdwn",
                      "text":"*Production deployment of ${{ inputs.app-name }} started*"
                    }
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "${{ steps.slack_message.outputs.MESSAGE }}"
                    }
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_TOKEN }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
